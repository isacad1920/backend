name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

permissions:
  contents: read

jobs:
  lint-and-test:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.13'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt -r requirements-test.txt

      - name: Ruff Lint
        run: |
          pip install ruff
          ruff check .

      - name: Run Tests
        env:
          DATABASE_URL: postgresql://postgres:postgres@localhost:5432/postgres
          JWT_SECRET: testsecret
        run: |
          # Use a temporary PostgreSQL service via docker
          docker run -d --name pg -e POSTGRES_PASSWORD=postgres -p 5432:5432 postgres:15-alpine
          # Wait for DB
          for i in {1..30}; do
            pg_isready -h localhost -p 5432 && break
            sleep 1
          done
          # Prisma generate & migrate (if schema present)
          pip install prisma
          prisma generate
          prisma migrate deploy || true
          pytest -q

      - name: Upload pytest cache (optional)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: pytest-cache
          path: .pytest_cache
